<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/dist/main.css">
    <title>People</title>
</head>

<body>
    <div class="flex">
        <div class="w-1/5 h-screen flex flex-col bg-black py-2">
            <button id="explore_btn" class="w-11/12 p-2 bg-white bg-opacity-10 text-white rounded-full mx-auto my-1.5 transition hover:text-green-500 hover:border hover:border-green-500">Explore</button>
            <button id="friends_btn" class="w-11/12 p-2 bg-white bg-opacity-10 text-white rounded-full mx-auto my-1.5 transition hover:text-green-500 hover:border hover:border-green-500">Friends</button>
            <button id="requests_btn" class="w-11/12 p-2 bg-white bg-opacity-10 text-white rounded-full mx-auto my-1.5 transition hover:text-green-500 hover:border hover:border-green-500">Requests</button>
        </div>

        <div class="w-4/5 p-4 bg-black bg-opacity-5">
            <div class="flex justify-between">
                <a href="/">home <i class="fa-solid fa-house"></i></a>
                <a href="/chats">chats</a>
            </div>
            <i class="fa-solid fa-house-chimney"></i>
            <i class="fas fa-home"></i>
    
            <div class="people-layout">
                <% for(let i = 0; i < unfriendPeople.length; i++) { %>
                    <div class="person-item">
                        <span class="person-name"><%= unfriendPeople[i].username %></span>
                        <div>
                            <button class="people-operation-btn request-friend-btn bg-green-400" data-userId="<%= unfriendPeople[i]._id %>">request</button>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <script>
        const token = localStorage.getItem('token');

        const explore_btn = document.getElementById('explore_btn');
        explore_btn.addEventListener('click', function() {
            getPeople('explore');
        });

        const friends_btn = document.getElementById('friends_btn');
        friends_btn.addEventListener('click', function() {
            getPeople('friends');
        });

        const requests_btn = document.getElementById('requests_btn');
        requests_btn.addEventListener('click', function() {
            getPeople('requested');
        });

        handleFriendOperations();

        function handleFriendOperations() {
            const addFriendBtns = document.querySelectorAll('.request-friend-btn');
            addFriendBtns.forEach(addFriendBtn => {
                addFriendBtn.addEventListener('click', async function() {
                    let answer = confirm('Are you sure to add friend ?');
                    if(answer) {
                        const user_id = this.getAttribute('data-userId');
                        let response = await toggleFriendConnection("request", user_id);
                        console.log(response);
                        let user = JSON.parse(localStorage.getItem('user'));
                        user.friends = response;
                        localStorage.setItem('user', JSON.stringify(user));
                    }
                });
            });

            const removeFriendBtns = document.querySelectorAll('.remove-friend-btn');
            removeFriendBtns.forEach(removeFriendBtn => {
                removeFriendBtn.addEventListener('click', async function() {
                    let answer = confirm('Are you sure to remove friend ?');
                    if(answer) {
                        const user_id = this.getAttribute('data-userId');
                        let response = await toggleFriendConnection("remove", user_id);
                        console.log(response);
                        let user = JSON.parse(localStorage.getItem('user'));
                        user.friends = response;
                        localStorage.setItem('user', JSON.stringify(user));
                    }
                });
            });

            const accpetFriendBtns = document.querySelectorAll('.accept-friend-btn');
            accpetFriendBtns.forEach(accpetFriendBtn => {
                accpetFriendBtn.addEventListener('click', async function() {
                    const user_id = this.getAttribute('data-userId');
                    let response = await responseFriendRequest("accept", user_id);
                    console.log(response);
                    accpetFriendBtn.parentElement.remove();
                    let user = JSON.parse(localStorage.getItem('user'));
                    user.friends = response;
                    localStorage.setItem('user', JSON.stringify(user));
                });
            });

            const declineFriendBtns = document.querySelectorAll('.decline-friend-btn');
            declineFriendBtns.forEach(declineFriendBtn => {
                declineFriendBtn.addEventListener('click', async function() {
                    let answer = confirm('Are you sure to decline friend ?');
                    if(answer) {
                        const user_id = this.getAttribute('data-userId');
                        let response = await responseFriendRequest("decline", user_id);
                        console.log(response);
                        declineFriendBtn.parentElement.remove();
                        let user = JSON.parse(localStorage.getItem('user'));
                        user.friendship_requests = response;
                        localStorage.setItem('user', JSON.stringify(user));
                    }
                });
            });
        }


        function getPeople(type) {
            fetch(`/api/people?type=${type}`, {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                }
            })
            .then((res) => res.json())
            .then((response) => {
                const list = response.list;
                let htmlItems = "";
                list.forEach((person) => {
                    htmlItems+= `<div class="person-item">`;               
                    htmlItems+= `<span class="person-name">${person.username}</span>`;               
                    htmlItems+= `<div>`;               

                    if(type == 'friends') {
                        htmlItems+= `
                            <button class="people-operation-btn remove-friend-btn bg-red-400" data-userId="${person._id}">remove</button>
                        `;
                    }
                    else if(type == 'explore') {
                        htmlItems+= `
                            <button class="people-operation-btn request-friend-btn bg-green-400" data-userId="${person._id}">request</button>
                        `;
                    }
                    else if(type == 'requested') {
                        htmlItems+= `
                            <button class="people-operation-btn accept-friend-btn bg-green-400" data-userId="${person._id}">accept</button>
                            <button class="people-operation-btn decline-friend-btn bg-red-400" data-userId="${person._id}">decline</button>
                        `;
                    }
                    htmlItems+= `</div>`;
                    htmlItems+= `</div>`;
                });
                document.querySelector('.people-layout').innerHTML = htmlItems;
                handleFriendOperations();
            });
        }

        async function toggleFriendConnection(required_action, user_id) {
            return await fetch(`/api/people/${required_action}/${user_id}`, {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                method: 'POST'
            })
            .then((res) => res.json())
            .then((response) => response);
        }

        async function responseFriendRequest(required_action, user_id) {
            return await fetch(`/api/response-friend-request/${required_action}/${user_id}`, {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                method: 'POST'
            })
            .then((res) => res.json())
            .then((response) => response);
        }
    </script>
</body>
</html>