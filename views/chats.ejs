<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>People</title>
</head>

<body>
    <div>
        <div class="people-layout">
            <% for(let i = 0; i < friends.length; i++) { %>
                <div>
                    <button class="chat-item" data-userId="<%= friends[i]._id %>">
                        <%= friends[i].username %>
                    </button>
                </div>
            <% } %>
        </div>

        <div>
            <%- include('./messages.ejs') %>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const token = localStorage.getItem('token');
        const user = JSON.parse(localStorage.getItem('user'));

        let active_chat_friend = null;

        var socket = io();
        
        socket.emit('connected', user._id);

        socket.on('messageReceived', function(messageObject) {
            messageObject = JSON.parse(messageObject);
            let message = createMessageItem({text: messageObject.messageText});
            document.querySelector('.messages-layout').innerHTML+= message;
        });

        const chatItems = document.querySelectorAll('.chat-item');
        chatItems.forEach(chatItem => {
            chatItem.addEventListener('click', function() {
                let userId = this.getAttribute('data-userId');
                getMessages(userId);
            });
        });

        async function getMessages(userId) {
            fetch(`/api/chats/${userId}`, {headers: {"Authorization": `Bearer ${token}`, "Content-Type": "application/json"}})
                .then((response) => response.json()).then((res) => {
                    // console.log(res);
                    const chat = res.chat;
                    active_chat_friend = {
                        chat_id: chat._id,
                        user_id: userId
                    };

                    let messagesElm = "";
                    if(chat.hasOwnProperty('messages')) {
                        const messages = chat.messages;
                        messages.forEach((message) => {
                            messagesElm+= createMessageItem(message);
                        });
                    }
                    else {
                        messagesElm = "No Messages Yet !";
                    }

                    document.querySelector('.messages-layout').innerHTML = messagesElm;
                })
                .catch((err) => {
                    console.log(err);
                });
        }
    
        
        document.getElementById('send-message-btn').addEventListener('click', function(e) {
            e.preventDefault();

            let form = document.getElementById('message-form');
            let messageText = document.querySelector('#message-form #message');

            if(messageText && active_chat_friend) {
                fetch(`/api/chats/${active_chat_friend.chat_id}/messages`, 
                    {
                        method: 'POST',
                        headers: {"Authorization": `Bearer ${token}`, 'Content-Type': 'application/json'},
                        body: JSON.stringify({
                            user_sender: active_chat_friend.user_id,
                            content_text: messageText.value
                        })
                    }
                )
                .then((res) => res.json())
                .then((response) => {
                    // console.log(response);
                    if(response.status) {
                        let message = createMessageItem(response.message);
                        document.querySelector('.messages-layout').innerHTML+= message;
                        document.querySelector('#message-form #message').value = "";

                        const sender_id = JSON.parse(localStorage.getItem('user'))._id;
                        let msgObject = {
                            sender_id: sender_id,
                            receiver_id: active_chat_friend.user_id,
                            messageText: response.message.text
                        };

                        socket.emit("messageSended", msgObject);
                    }
                });
            }
        });


        function createMessageItem(message) {
            return `
                <div class="message-item">
                    ${message.text}
                </div>
            `;
        }
    </script>
</body>
</html>